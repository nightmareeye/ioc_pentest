"""Todo models
"""
from ctypes import Union
from enum import Enum

from sqlalchemy.ext.mutable import MutableList
from sqlalchemy import PickleType
from pydantic import BaseModel
from sqlalchemy import Column, Integer, Boolean, Text, ForeignKey
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy.orm import relationship, backref

Base = declarative_base()


class Network(Base):
    """network model
    """
    __tablename__ = 'network'
    id = Column(Integer, primary_key=True)
    ip_address = Column(Text)
    mac_address = Column(Text)
    os = Column(Text, default="Неизвестная ОС")
    is_web_app = Column(Boolean, default=False)

    port_services = relationship('Port_services', backref='network', cascade='all, delete, delete-orphan')


class Port_services(Base):
    """port_services model
    """
    __tablename__ = 'port_services'
    id = Column(Integer, primary_key=True)
    network_scan_id = Column(Integer, ForeignKey(Network.id))
    port = Column(Integer)
    protocol = Column(Text)
    service_name = Column(Text, default="Служба не определена")
    service_version = Column(Text)



class Tags(str, Enum):
    studies = "studies"
    personal = "personal"
    plans = "plans"


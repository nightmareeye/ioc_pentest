"""Main of IOC Pentest app
"""
from loguru import logger
from fastapi import FastAPI, Request, Depends, Form, status, HTTPException, Response
from fastapi.templating import Jinja2Templates
from fastapi.responses import RedirectResponse
from starlette.responses import FileResponse
from fastapi.staticfiles import StaticFiles

# pylint: disable=invalid-name
templates = Jinja2Templates(directory="templates")

app = FastAPI()

logger = logger.opt(colors=True)
# pylint: enable=invalid-name
app.mount("/static", StaticFiles(directory="static"), name="static")

@app.get("/connect")
async def connect(request: Request):
    pass



@app.get("/")
async def home(request: Request):
    """Main page with todo list
    """
    logger.info("Main page")
    return templates.TemplateResponse("index.html", {"request": request})

@app.get("/servers")
async def servers_get(request: Request):
    logger.info("Servers page")
    return templates.TemplateResponse("servers.html", {"request": request})

@app.post("/servers/{server_id}")
async def servers_post(request: Request, server_id: int):
    logger.info("Servers page")
    return templates.TemplateResponse("servers.html", {"request": request})


@app.get("/stats")
async def stats(request: Request):
    logger.info("Stats page")
    return templates.TemplateResponse("stats.html", {"request": request})


@app.get("/pentest")
async def pentest_get(request: Request):
    logger.info("Pentest page")
    return templates.TemplateResponse("pentest.html", {"request": request})

@app.post("/pentest/{server_id}")
async def pentest_post(request: Request, server_id: int):
    logger.info("Pentest page")
    return templates.TemplateResponse("pentest.html", {"request": request})

@app.get("/notifications")
async def notifications(request: Request):
    logger.info("Notifications page")
    return templates.TemplateResponse("notifications.html", {"request": request})

@app.post("/notifications/{event_id}")
async def notifications_post(request: Request, event_id: str):
    logger.info("Notifications page")
    return templates.TemplateResponse("notifications.html", {"request": request})
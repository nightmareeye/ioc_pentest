import org.zaproxy.zap.extension.ascan.ActiveScanRule
import org.parosproxy.paros.network.HttpMessage
import org.parosproxy.paros.core.scanner.Alert

class OAuthRule extends ActiveScanRule {
    @Override
    public void scan(HttpMessage msg, String param, String value) {
        def maliciousRedirectUri = "http://malicious.com"
        def newMsg = msg.cloneRequest()
        newMsg.getRequestHeader().setURI(new URI(msg.getRequestHeader().getURI().toString().replace("redirect_uri=", "redirect_uri=${maliciousRedirectUri}"), true))
        sendAndReceive(newMsg, false)
        if (newMsg.getResponseHeader().getHeader("Location") == maliciousRedirectUri) {
            bingo(Alert.RISK_HIGH, Alert.CONFIDENCE_MEDIUM, "OAuth Attack", "OAuth vulnerability detected.", newMsg.getRequestHeader().getURI().toString(), param, value, maliciousRedirectUri, "", newMsg)
        }
    }
}

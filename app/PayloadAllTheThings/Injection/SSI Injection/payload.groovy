import org.zaproxy.zap.extension.ascan.ActiveScanRule
import org.parosproxy.paros.network.HttpMessage
import org.parosproxy.paros.core.scanner.Alert

class SSIInjectionRule extends ActiveScanRule {
    @Override
    public void scan(HttpMessage msg, String param, String value) {
        def ssiPayload = "<!--#exec cmd='ls'-->"
        def newMsg = msg.cloneRequest()
        newMsg.getRequestBody().setBody(newMsg.getRequestBody().toString().replace(value, ssiPayload))
        sendAndReceive(newMsg, false)
        if (newMsg.getResponseBody().toString().contains("command output")) {
            bingo(Alert.RISK_HIGH, Alert.CONFIDENCE_MEDIUM, "SSI Injection", "SSI Injection vulnerability detected.", newMsg.getRequestHeader().getURI().toString(), param, value, ssiPayload, "", newMsg)
        }
    }
}
